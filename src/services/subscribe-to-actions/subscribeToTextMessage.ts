import { IVacancyParsed } from "../../types/vacancy";
import { EditVacancyService, MessagePreviewService, logger } from "../index";
import { parseVacancyFieldsTextMessage } from "../vacancy-parser";

export const subscribeToTextMessage = async (ctx) => {
  const { message_id, from, text, chat } = ctx?.update?.message || {};

  try {
    if (!message_id || !from?.username || !chat?.id) {
      throw Error("cannot retrieve required message info");
    }

    const [techInfoLine, disclaimerLine, gapLine, ...updatedInfoText] =
      text.split("\n");

    // edited existing vacancy
    if (techInfoLine && techInfoLine.startsWith(`@${ctx?.botInfo?.username}`)) {
      const [, messageId] = techInfoLine.split(" > ");

      await EditVacancyService.onVacancyEdit(ctx, {
        messageId,
        updatedText: updatedInfoText.join("\n"),
      });
      return;
    }

    // here we generate vacancy text from message somehow

    // const textExamples = [
    //   `Frontend Developer

    //   –ö–æ–º–ø–∞–Ω–∏—è: Intentiq
    //   –ó/–ü —Å–∫–æ–ª—å–∫–æ –∏ –∫–∞–∫: 5000 $ gross
    //   –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –ª–æ–∫–∞—Ü–∏–∏: –Ω–µ –†–§ –∏ –†–ë
    //   –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫: B2-C1 –ê–Ω–≥–ª–∏–π—Å–∫–∏–π

    //   –ù–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:
    //   ‚Äî native js + UI –Ω–∞ react + figma
    //   ‚Äî –æ—Ç 5 –ª–µ—Ç

    //   –ü—Ä–æ—Ü–µ—Å—Å –Ω–∞–π–º–∞:
    //   HR, –¢–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∏–Ω—Ç–µ—Ä–≤—å—é, –û—Ñ—Ñ–µ—Ä

    //   –û–ø–∏—Å–∞–Ω–∏–µ:
    //   –ò–∑—Ä–∞–∏–ª—å—Å–∫–∞—è –∫–æ–º–ø–∞–Ω–∏—è, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–Ω–∏–º–∞–µ—Ç—Å—è –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏ —Ç–∞—Ä–≥–µ—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º —Ä–µ–∫–ª–∞–º—ã –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö  - –∫–æ–º–ø—å—é—Ç–µ—Ä, –º–æ–±–∏–ª—å–Ω—ã–π —Ç–µ–ª–µ—Ñ–æ–Ω –∏–ª–∏ –ø–ª–∞–Ω—à–µ—Ç, Smart TV –∏ —Ç.–¥. –ü—Ä–æ–¥—É–∫—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç –≤—ã—è–≤–∏—Ç—å —Å–≤—è–∑—å –º–µ–∂–¥—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ —Ä–∞–∑–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤.

    //   –ù–∞ –æ—Å–Ω–æ–≤–µ big data –∫–æ–º–ø–∞–Ω–∏—è –Ω–∞–∑–Ω–∞—á–∞–µ—Ç –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –Ω–µ–∫–∏–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π ID, –∫–æ—Ç–æ—Ä—ã–π –∑–∞—Ç–µ–º –ø–µ—Ä–µ–¥–∞–µ—Ç —Ä–µ–∫–ª–∞–º–Ω—ã–º –ø–ª–æ—â–∞–¥–∫–∞–º DSP/SSP (–∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å–∏—Å—Ç–µ–º—ã –ø–æ–∫—É–ø–∫–∏/–ø—Ä–æ–¥–∞–∂–∏ —Ä–µ–∫–ª–∞–º—ã). –í—Å—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö —Å–æ–±–∏—Ä–∞–µ—Ç—Å—è –∏ –ø–µ—Ä–µ–¥–∞–µ—Ç—Å—è –Ω–∞ –ø–ª–æ—â–∞–¥–∫–∏ –≤ –æ–±–µ–∑–ª–∏—á–µ–Ω–Ω–æ–º –≤–∏–¥–µ, —Ç–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º –∑–∞—â–∏—â–∞—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ. –ï–∂–µ–¥–Ω–µ–≤–Ω–æ –∫–æ–º–ø–∞–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–æ–ª–µ–µ 20 –º–ª—Ä–¥ —Ä–∞–∑–ª–∏—á–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ –∏ –≤ —Ä–µ–∞–ª—å–Ω–æ–º –≤—Ä–µ–º–µ–Ω–∏ —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –ø–æ—Ä—Ç—Ä–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π.`,
    //   `–ö–æ–º—É: node.js Kotlin, G–æ, Python –∏ React –∏–ª–∏ –∂–µ–ª–∞—é—â–∏–º –ø–∏—Å–∞—Ç—å –Ω–∞ –Ω–∏—Ö (–æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ —Ö–æ—Ç–∏—Ç–µ –ø–µ—Ä–µ–π—Ç–∏ —Å –°/–°++) –ö–æ–º–ø–∞–Ω–∏—è: —Å–ª–æ–≤–∞—Ü–∫–∏–π —Ñ–∏–Ω—Ç–µ—Ö –∞—É—Ç—Å–æ—Ä—Å Vacuumlabs (–ø–æ–¥—Ä–æ–±–Ω–µ–µ https://vacuumlabs.com/about)
    //   –ó/–ü —Å–∫–æ–ª—å–∫–æ –∏ –∫–∞–∫: –æ—Ç 2500 –µ–≤—Ä–æ –≤ –º–µ—Å. –¥–ª—è –¥–∂—É–Ω–æ–≤ –¥–æ 6000 –µ–≤—Ä–æ –≤ –º–µ—Å. –¥–ª—è –º–∏–¥–ª–æ–≤/—Å–∏–Ω—å–µ—Ä–æ–≤ (—ç—Ç–æ –≤ –≥—Ä–æ—Å—Å) + –ï–¥–∏–Ω–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –≤—ã–ø–ª–∞—Ç–∞ –≤ 2000 –µ–≤—Ä–æ –Ω–∞ —Ä—É–∫–∏ –ø—Ä–∏ —Ç—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–µ.
    //   –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –ª–æ–∫–∞—Ü–∏–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å): —Ä–∞–±–æ—Ç–∞—Ç—å –∏–∑ –ª—é–±–æ–π —Å—Ç—Ä–∞–Ω—ã —Å–∫—Ä–æ–º–µ –†–§ –∏ –†–ë. –î–µ—è—Ç–µ–ª—å–Ω–æ –ø–æ–º–æ–≥–∞–µ–º —Å —Ä–µ–ª–æ–∞—Ü–∏–µ–π –Ω–∞ –ö–∏–ø—Ä, –≤ –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–∞–Ω—ã - –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–æ–Ω–Ω–æ.
    //   –ò–Ω–æ—Å—Ç—Ä–∞–Ω–Ω—ã–π —è–∑—ã–∫ (–µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º): –∞–Ω–≥–ª–∏–π—Å–∫–∏–π —Å–≤–æ–±–æ–¥–Ω—ã–π –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ. –í –∫–æ–º–ø–∞–Ω–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ä—É—Å—Å–∫–æ–≥–æ–≤–æ—Ä—è—â–∏—Ö —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.
    //   –ù–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã: –æ—Ç 2-—Ö –ª–µ—Ç, —Ö–æ—Ä–æ—à–∞—è –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–∞—è –ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞, –≤ –∏–¥–µ–∞–ª–µ –æ–ø—ã—Ç —Ä–µ—à–µ–Ω–∏—è –∑–∞–¥–∞—á–µ–∫ –∏ —É—á–∞—Å—Ç–∏–µ –≤ —Å–æ—Ä–µ–≤–Ω–æ–≤–∞–Ω–∏—è—Ö –Ω–∞ –ø–ª–æ—â–∞–¥–∫–∞—Ö —Ç–∏–ø–∞ codeforces  –ü—Ä–æ—Ü–µ—Å—Å –Ω–∞–π–º–∞: 1) 20-30 –º–∏–Ω—É—Ç —Å –∞–Ω–≥–ª–æ–≥–æ–≤–æ—Ä—è—â–∏–º HR-–æ–º 2) —Ä–µ—à–µ–Ω–∏–µ –∞–ª–≥–æ—Ä–∏—Ç–º–∏—á–µ—Å–∫–æ–π –∑–∞–¥–∞—á–∏ –Ω–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ (2 —á–∞—Å–∞) 3) —Ç–µ—Ö—Å–æ–±–µ—Å –≤–∫–ª—é—á–∞—è –ª–∞–π—Ñ–∫–æ–¥–∏–Ω–≥ (2-2,5 —á–∞—Å–∞) 4) –°–æ–±–µ—Å –ø–æ —Å–æ—Ñ—Ç—Å–∫–∏–ª–ª–∞–º —Å –∫–æ–º–∞–Ω–¥–æ–π.
    //   –û–ø–∏—Å–∞–Ω–∏–µ: Vacuumlabs  —Ñ–æ—Ä–º–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –Ω–∞ –ö–∏–ø—Ä–µ + —É—Å–∏–ª—è–µ—Ç —Ç–µ–∫—É—â–∏–µ –∫–æ–º–∞–Ω–¥—ã, –ø–æ—ç—Ç–æ–º—É –µ—Å—Ç—å –≤–∞–∫–∞–Ω—Å–∏–∏ –Ω–∞ —Ä–∞–∑–Ω—ã—Ö —è–∑—ã–∫–∞ –∏ –≤ —Ä–∞–∑–Ω—ã—Ö –∫–æ–º–∞–Ω–¥–∞—Ö. –°–µ–π—á–∞—Å —à—Ç–∞—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ +/- 300 —á–µ–ª–æ–≤–µ–∫, —Ä–∞—Å–∫–∏–¥–∞–Ω–Ω—ã—Ö –ø–æ –≤—Å–µ–º—É –º–∏—Ä—É. –ü—Ä–∏–Ω—Ü–∏–ø –∫–æ–º–ø–∞–Ω–∏–∏: ¬´–°–∏–ª—å–Ω—ã–µ –∏–Ω–∂–µ–Ω–µ—Ä—ã –±–µ–∑ –∂–µ—Å—Ç–∫–æ–π –ø—Ä–∏–≤—è–∑–∫–∏ –∫ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è–º¬ª. –¢—Ä—É–¥–æ—É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ, –≤–æ–∑–º–æ–∂–Ω–∞ –ø–æ–ª–Ω–∞—è –∏ —á–∞—Å—Ç–∏—á–Ω–∞—è –∑–∞–Ω—è—Ç–æ—Å—Ç—å. –ü—Ä–∏ –ø–æ–ª–Ω–æ–π –∑–∞–Ω—è—Ç–æ—á—Ç–∏ - –æ–ø–ª–∞—Ç–∞ –æ—Ç–ø—É—Å–∫–∞, –±–æ–ª—å–Ω–∏—á–Ω–æ–≥–æ, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –ø—Ä–∏–æ–±—Ä–µ—Ç–µ–Ω–∏—è –∞–∫—Ü–∏–π –∫–æ–º–ø–∞–Ω–∏–∏, –¥–∞–ª—å–Ω–µ–π—à–∞—è —Ä–µ–ª–æ–∫–∞—Ü–∏—è –≤ —Å—Ç—Ä–∞–Ω—ã –ï–° (–∫–æ–≥–¥–∞ –±—É–¥–µ—Ç —Ç–∞–∫–∞—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å).`,
    //   `–ü—Ä–∏–≤–µ—Ç! üôÇ –•–æ—á—É –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –≤–∞–∫–∞–Ω—Å–∏—é Senior Backend —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞ –≤ –∫–æ–º–ø–∞–Ω–∏—é inDriver

    //   Senior Backend Engineer
    //   –ö–æ–º–ø–∞–Ω–∏—è: inDriver
    //   –ó/–ü —Å–∫–æ–ª—å–∫–æ –∏ –∫–∞–∫: –æ—Ç 256 000 —Ä—É–±. –∏ –≤—ã—à–µ

    //   –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –ª–æ–∫–∞—Ü–∏–∏: —Ä–µ–ª–æ–∫–µ–π—Ç –≤ –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω –ø–æ—Å–ª–µ –ò–° —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–æ—Å–ª–µ–¥—É—é—â–µ–π —Ä–µ–ª–æ–∫–∞—Ü–∏–∏ –Ω–∞ –ö–∏–ø—Ä.

    //   –ù–∞–≤—ã–∫–∏ –∏ –æ–ø—ã—Ç —Ä–∞–±–æ—Ç—ã:
    //   –ò—Å–ø–æ–ª—å–∑—É–µ–º Golang –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤, –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö MySQL, MongoDB, –∞ –∫—ç—à –Ω–∞ Redis. –†–∞–∑—Ä–∞–±–æ—Ç–∫—É –≤–µ–¥–µ–º –Ω–∞ Github, –∏—Å–ø–æ–ª—å–∑—É–µ–º TeamCity –∏ Github Actions.
    //   –í –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–µ Docker, Kubernetes, Helm, Prometheus, Grafana –∏ Kafka. –ï—â—ë –º—ã –∏—Å–ø–æ–ª—å–∑—É–µ–º Feature Toggles, Blue-Green Deployment –∏ –¥—Ä—É–≥–∏–µ –ø–æ–¥—Ö–æ–¥—ã –∫ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ, —á—Ç–æ–±—ã –Ω–∏—á–µ–≥–æ –Ω–µ —Å–ª–æ–º–∞–ª–æ—Å—å –≤ –ø—Ä–æ–¥–∞–∫—à–µ–Ω–µ.

    //   –ü—Ä–æ—Ü–µ—Å—Å –Ω–∞–π–º–∞: 3 —ç—Ç–∞–ø–∞ - HR, —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ —Å–æ–±–µ—Å–µ–¥–æ–≤–∞–Ω–∏–µ –∏ —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –≤—Å—Ç—Ä–µ—á–∞.

    //   –û–ø–∏—Å–∞–Ω–∏–µ: –ø–æ–ª–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –≤–∞–∫–∞–Ω—Å–∏–∏
    //   –ö–æ–Ω—Ç–∞–∫—Ç: @liuboushka888 –∏–ª–∏ lubov.iv@indriver.com`,
    // ];

    // for(let i = 0; i < textExamples.length; i++) {
    //   const parsedVacancyObject: IVacancyParsed = parseVacancyFieldsTextMessage(ctx,
    //     textExamples[i]
    //   );

    //  await MessagePreviewService.sendMessagePreview(ctx, parsedVacancyObject);
    // }

    const parsedVacancyObject = parseVacancyFieldsTextMessage(ctx, text);

    await MessagePreviewService.sendMessagePreview(ctx, parsedVacancyObject);
  } catch (err) {
    logger.error(
      `Failed to process incoming message ${from?.username}::${
        chat?.id
      }::${message_id} - ${(err as Error)?.message || JSON.stringify(err)}`
    );
  }
};
